#include "arduino_secrets.h"
/***************************************************************************************************** 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/6f7d958c-333a-4db9-8888-e557ae8c1dc6 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  bool feedback;
  bool relay_1;
  bool relay_2;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.

  GitHub https://github.com/SF1960/M5_Dual_Relay

*******************************************************************************************************/

#include "thingProperties.h"                // Arduino library for cloud variables          
#include <M5StickCPlus.h>                   // M5 library for the M5Stick
#include "pbHelper.h"                       // local library for the integral push buttons
#include "relayHelper.h"                    // local library for the relay module
#include "M5Helper.h"                       // local library for the M5

#define PRESSED 0                           // macro for button pressed value

/* integer values for the display */
int line1 = 10; int line2 = 50; int line3 = 70; int line4 = 110;

/* integer values for the buttons */
int last_value_home  = 0; int cur_value_home  = 0;
int last_value_reset = 0; int cur_value_reset = 0;

/* set up routine for the sketch */
void setup() {

  Serial.begin(115200);
  delay(1500); 

  /* Initialise the cloud variables in thingProperties.h
  *  and connect to Arduino Thing */
  initProperties();
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

  /* setup the devices */
  stick::setup();                           // set up the M5 Stick
  relay::setup();                           // set up the relays
  startupScreen();                          // draw startup screen
  
} // setup()

/* main loop for the sketch */
void loop() {
  
  ArduinoCloud.update();
  
  cur_value_home = btn::homeButton();        // get home pushbutton state
  cur_value_reset = btn::resetButton();      // get reset pushbutton state
  
  /* debounce Home PB */
  if (cur_value_home != last_value_home) {

    if (cur_value_home == PRESSED) { onRelay1Change(); }
    last_value_home = cur_value_home;        // reset the debounce variables

  } // debounce Hone PB
  
  /* debounce Reset PB */
  if (cur_value_reset != last_value_reset) {

    if (cur_value_reset == PRESSED) { onRelay2Change(); }
    last_value_reset = cur_value_reset;      // reset the debounce variables

  } // debounce Reset PB

} // loop()

/* Toggle the relay */
void onRelay1Change()  {
  
  static bool on = false;
  
  if (on){
    digitalWrite(R1, HIGH);
    M5.Lcd.fillRect(100, line2, 80, 20, BLACK);
    M5.Lcd.setCursor(100, line2);
    M5.Lcd.setTextColor(GREEN);
    M5.Lcd.print("ON");
    relay_1 = true;

  } else {
    digitalWrite(R1, LOW);
    M5.Lcd.fillRect(100, line2, 80, 20, BLACK);
    M5.Lcd.setCursor(100, line2);
    M5.Lcd.setTextColor(RED);
    M5.Lcd.print("OFF");
    relay_1 = false;
  
  }
  
  on = !on;
  
} // onRelay1Change()

/* Toggle the relay */
void onRelay2Change()  {
  // Add your code here to act upon Relay2 change
  
  static bool on = false;
  
  if (on){
    digitalWrite(R2, HIGH);
    M5.Lcd.fillRect(100, line3, 80, 20, BLACK);
    M5.Lcd.setCursor(100, line3);
    M5.Lcd.setTextColor(GREEN);
    M5.Lcd.print("ON");
    relay_2 = true;

  } else {
    digitalWrite(R2, LOW);
    M5.Lcd.fillRect(100, line3, 80, 20, BLACK);
    M5.Lcd.setCursor(100, line3);
    M5.Lcd.setTextColor(RED);
    M5.Lcd.print("OFF");
    relay_2 = false;
  
  }

  on = !on;
  
} // onRelay2Change()

/* draw Start Up screen */
void startupScreen(){

  M5.Lcd.drawRoundRect(5, 5, width-10, height-10, 5, BLUE); 
  
  M5.Lcd.setCursor(50, line1);
  M5.Lcd.println(("Relay Status"));
  
  M5.Lcd.setCursor(65, line2);
  M5.Lcd.print("1:");
  M5.Lcd.setCursor(65, line3);
  M5.Lcd.print("2:");
  
  M5.Lcd.setTextColor(RED);
  M5.Lcd.setCursor(100, line2);
  M5.Lcd.print("OFF");
  M5.Lcd.setCursor(100, line3);
  M5.Lcd.print("OFF");
  
  M5.Lcd.setTextColor(CYAN);
  M5.Lcd.setCursor(50,line4);
  M5.Lcd.print("Arduino IOT");

} // startupScreen()
